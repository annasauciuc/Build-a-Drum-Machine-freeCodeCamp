{"version":3,"sources":["components/Drum/Drum.js","components/Controller/Controller.js","components/data/bankOne.js","components/data/bankTwo.js","App.js","serviceWorker.js","index.js"],"names":["Drum","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playSoundKeyPress","btnSelected","power","audio","document","getElementById","keyTrigger","classList","add","curentTime","play","updateBtnSelected","id","removeTransition","e","propertyName","target","remove","componentDidMount","window","addEventListener","handleKeyPress","bind","assertThisInitialized","btnProps","filter","btn","i","keyCode","length","removeEventListener","_this2","react_default","a","createElement","Fragment","className","map","key","onClick","src","url","Component","Controller","_this$props","adjustVolume","updatePower","bankSelected","updateBankSelected","sliderVal","display","Array","from","getElementsByClassName","forEach","sound","volume","powerSlider","float","bankSlider","style","type","min","max","step","value","onChange","bankOne","bankTwo","ButtonSound","App","state","setState","console","log","_this$state","bank","push","prevProps","prevState","_this$state2","result","Math","floor","setTimeout","clearDisplay","_this3","_this$state3","components_Drum_Drum","b","components_Controller_Controller","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e01bf68d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./Drum.css\";\r\n\r\nclass Drum extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.playSoundKeyPress = this.playSoundKeyPress.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n  }\r\n\r\n  playSoundKeyPress = btnSelected => {\r\n    const { power } = this.props;\r\n    const audio = document.getElementById(btnSelected.keyTrigger);\r\n    audio.classList.add(\"playing\");\r\n    if (!audio || !power) return;\r\n    audio.curentTime = 0;\r\n    audio.play();\r\n    this.props.updateBtnSelected(btnSelected.id);\r\n  };\r\n  handleKeyPress(e) {\r\n    const { btnProps } = this.props;\r\n    let btnSelected = btnProps.filter((btn, i) => {\r\n      return e.keyCode == btn.keyCode;\r\n    });\r\n    if (btnSelected.length > 0) {\r\n      this.playSoundKeyPress(btnSelected[0]);\r\n    }\r\n  }\r\n  removeTransition = e => {\r\n    if (e.propertyName !== \"transform\") return;\r\n    e.target.classList.remove(\"playing\");\r\n  };\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"keydown\", this.handleKeyPress);\r\n  };\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\r\n    document.removeEventListener(\"transitionend\", this.removeTransition);\r\n  }\r\n\r\n  render() {\r\n    const { btnProps } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"btnDrum \">\r\n          {btnProps.map((btn, i) => {\r\n            return (\r\n              <div\r\n              id={btn.id}\r\n                key={\"sound\" + i}\r\n                className=\"key drum-pad\"\r\n                onClick={() => this.playSoundKeyPress(btn)}>\r\n                <audio className=\"clip\" id={btn.keyTrigger} src={btn.url} />\r\n                {btn.keyTrigger}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Drum;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Controller.css\";\r\n\r\nclass Controller extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      adjustVolume,\r\n      btnSelected,\r\n      updatePower,\r\n      power,\r\n      bankSelected,\r\n      updateBankSelected,\r\n      sliderVal,\r\n      display\r\n    } = this.props;\r\n\r\n    const clips = Array.from(document.getElementsByClassName(\"clip\"));\r\n    clips.forEach(sound => {\r\n      sound.volume = sliderVal;\r\n    });\r\n    const powerSlider = power\r\n      ? {\r\n          float: \"right\"\r\n        }\r\n      : {\r\n          float: \"left\"\r\n        };\r\n    const bankSlider =\r\n      bankSelected == \"bankOne\"\r\n        ? {\r\n            float: \"right\"\r\n          }\r\n        : {\r\n            float: \"left\"\r\n          };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"logo\">\r\n          <span className=\"textLogo\">FCC&nbsp;</span>\r\n          <i className=\"fab fa-2x fa-free-code-camp\" />\r\n        </div>\r\n        <div className=\"bankController\">\r\n          <div className=\"power\">\r\n            {\" \"}\r\n            <p>Power</p>\r\n            <div onClick={() => updatePower()} className=\"select\">\r\n              <div style={powerSlider} className=\"powerChange\" />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p  id=\"display\" className=\"shaker\">{btnSelected ? btnSelected : display}</p>\r\n          </div>\r\n          <div className=\"range\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              step=\"0.01\"\r\n              value={sliderVal}\r\n              onChange={e => adjustVolume(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"power\">\r\n            {\" \"}\r\n            <p>Bank</p>\r\n            <div onClick={() => updateBankSelected()} className=\"select\">\r\n              <div style={bankSlider} className=\"powerChange\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Controller;\r\n","const bankOne = [{\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n  }, {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n  }, {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n  }, {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n  }, {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n  }, {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n  }, {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n  }, {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n  }, {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n  },\r\n];\r\nexport default bankOne;","const bankTwo = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: \"Q\",\r\n    id: \"Chord-1\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: \"W\",\r\n    id: \"Chord-2\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: \"E\",\r\n    id: \"Chord-3\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: \"A\",\r\n    id: \"Shaker\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: \"S\",\r\n    id: \"Open-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: \"D\",\r\n    id: \"Closed-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: \"Z\",\r\n    id: \"Punchy-Kick\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: \"X\",\r\n    id: \"Side-Stick\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: \"C\",\r\n    id: \"Snare\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\r\n  }\r\n];\r\nexport default bankTwo;\r\n","import React, { Component } from \"react\";\nimport Drum from \"./components/Drum/Drum\";\nimport Controller from \"./components/Controller/Controller\";\nimport \"./App.css\";\nimport bankOne from \"./components/data/bankOne\";\nimport bankTwo from \"./components/data/bankTwo\";\n\nclass ButtonSound {\n  constructor(keyCode, keyTrigger, id, url) {\n    this.keyCode = keyCode;\n    this.keyTrigger = keyTrigger;\n    this.id = id;\n    this.url = url;\n  }\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      btnProps: [],\n      power: true,\n      bankSelected: \"bankOne\",\n      btnSelected: \"\",\n      sliderVal: 0.5,\n      display: \"Heater Kit\"\n    };\n    this.updateBankSelected = this.updateBankSelected.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"bankOne :\", bankOne);\n    const { btnProps, bankSelected } = this.state;\n    if (bankSelected == \"bankOne\") {\n      bankOne.map((bank, i) => {\n        btnProps.push(\n          new ButtonSound(bank.keyCode, bank.keyTrigger, bank.id, bank.url)\n        );\n      });\n    } else {\n      bankTwo.map((bank, i) => {\n        btnProps.push(\n          new ButtonSound(bank.keyCode, bank.keyTrigger, bank.id, bank.url)\n        );\n      });\n    }\n    this.setState({ btnProps: btnProps });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { btnProps, bankSelected } = this.state;\n    let result = [];\n    if (prevState.bankSelected != this.state.bankSelected) {\n      if (bankSelected == \"bankOne\") {\n        bankOne.map((bank, i) => {\n          result.push(\n            new ButtonSound(bank.keyCode, bank.keyTrigger, bank.id, bank.url)\n          );\n        });\n      } else {\n        bankTwo.map((bank, i) => {\n          result.push(\n            new ButtonSound(bank.keyCode, bank.keyTrigger, bank.id, bank.url)\n          );\n        });\n      }\n      this.setState({ btnProps: result, display: \"Smooth Piano Kit\" });\n    }\n  }\n  clearDisplay() {\n    this.setState({\n      display: \"\"\n    });\n  }\n  adjustVolume(e) {\n    if (this.state.power) {\n      this.setState({\n        sliderVal: e.target.value,\n        display: \"Volume: \" + Math.floor(e.target.value * 100)\n      });\n      setTimeout(() => this.clearDisplay(), 6000);\n    }\n  }\n\n  updateBankSelected = () => {\n    const { bankSelected } = this.state;\n    if (bankSelected == \"bankOne\") {\n      this.setState({ bankSelected: \"bankTwo\" });\n    } else {\n      this.setState({ bankSelected: \"bankOne\" });\n    }\n  };\n  updateBtnSelected = btnSelected => {\n    this.setState({ display: btnSelected });\n  };\n  updatePower = () => {\n    const { power } = this.state;\n    this.setState({ power: !power });\n  };\n\n  render() {\n    const {\n      btnProps,\n      btnSelected,\n      power,\n      bankSelected,\n      sliderVal,\n      display\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"container centered\" id=\"drum-machine\">\n          <Drum\n            power={power}\n            updateBtnSelected={b => this.updateBtnSelected(b)}\n            btnProps={btnProps}\n          />\n          <Controller\n            display={display}\n            sliderVal={sliderVal}\n            adjustVolume={e => this.adjustVolume(e)}\n            updateBankSelected={() => this.updateBankSelected()}\n            bankSelected={bankSelected}\n            power={power}\n            updatePower={() => this.updatePower()}\n            btnSelected={btnSelected}\n            btnProps={btnProps}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"normalize.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}